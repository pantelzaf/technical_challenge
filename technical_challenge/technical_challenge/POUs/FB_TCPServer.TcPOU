<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_TCPServer" Id="{eaed78c2-34d1-42b7-98f4-b58fa196fe7c}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_TCPServer
VAR_INPUT
	SendData : DWORD;
	ServerNetworkId : STRING;
	ServerAddress : STRING;
	ServerPort : UDINT;
END_VAR
VAR_OUTPUT
	Busy : BOOL;
	Error: BOOL;
	ReceivedData : DWORD;
	ErrorId : UDINT;
END_VAR
VAR
	SocketCloseAll : FB_SocketCloseAll := (sSrvNetID := '', tTimeout:=T#100S);
	SocketListen : FB_SocketListen := (bExecute := TRUE);
	SocketAccept : FB_SocketAccept;
	SocketSend : FB_SocketSend;
	SocketReceive : FB_SocketReceive;
	
	timer : TON := (PT:=T#500MS);
	
	HandleListener : T_HSOCKET;
	HandleSocket : T_HSOCKET;
	
	CloseAll : BOOL:= TRUE;
	ConnectionAccepted: BOOL;
	BufferData : STRING;
	Timeout : TIME := T#10S;
	
	state : E_State;	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF CloseAll THEN
	CloseAll := FALSE;
	SocketCloseAll(bExecute :=TRUE);
ELSE
	SocketCloseAll(bExecute :=FALSE);
END_IF

timer(PT:=T#100MS);

SocketListen(
	sSrvNetId:= ServerNetworkId, 
	sLocalHost:= ServerAddress, 
	nLocalPort:= ServerPort, 
	bExecute:= , 
	tTimeout:= Timeout, 
	bBusy=> Busy, 
	bError=> Error, 
	nErrId=> ErrorId, 
	hListener=> HandleListener);
	
SocketAccept(
	sSrvNetId:= ServerNetworkId, 
	hListener:= HandleListener, 
	bExecute:= , 
	tTimeout:= Timeout, 
	bAccepted=> ConnectionAccepted, 
	bBusy=> Busy, 
	bError=> Error, 
	nErrId=> ErrorId, 
	hSocket=> HandleSocket);
	
SocketSend(
	sSrvNetId:= ServerNetworkId, 
	hSocket:= HandleSocket, 
	cbLen:= 4, 
	pSrc:= ADR(SendData), 
	bExecute:= , 
	tTimeout:= Timeout, 
	bBusy=> Busy, 
	bError=> Error, 
	nErrId=> ErrorId);

	
SocketReceive(
	sSrvNetId:= ServerNetworkId, 
	hSocket:= HandleSocket, 
	cbLen:= SIZEOF(BufferData), 
	pDest:= ADR(BufferData), 
	bExecute:= , 
	tTimeout:= Timeout, 
	bBusy=> Busy, 
	bError=> Error, 
	nErrId=> ErrorId, 
	nRecBytes=> );
	
	

CASE state OF
	E_State.STATE_1_Listen:
		SocketListen.bExecute := TRUE;
		state := E_State.STATE_2_Accept;
		
	E_State.STATE_2_Accept:
		SocketListen.bExecute := FALSE;
		IF NOT SocketListen.bBusy AND NOT SocketListen.bError THEN
			SocketAccept.bExecute := FALSE;
			timer.IN := TRUE;
			IF ConnectionAccepted THEN
				SocketReceive.bExecute := TRUE;
				state := E_State.STATE_3_Receive;
			ELSIF timer.Q THEN
				SocketAccept.bExecute := TRUE;
				timer.IN := FALSE;
			END_IF
		END_IF
		
	E_State.STATE_3_Receive:
		SocketReceive.bExecute := FALSE;
		IF NOT SocketReceive.bBusy AND NOT SocketReceive.bError THEN
			IF SocketReceive.nRecBytes = 0 THEN
				SocketReceive.bExecute := TRUE;
			ELSE
				MEMSET(
					destAddr := ADR(ReceivedData),
					fillByte := 0,
					n := SIZEOF(ReceivedData));
				MEMCPY (
					destAddr := ADR(ReceivedData),
					srcAddr := SocketReceive.pDest,
					n := SocketReceive.nRecBytes);
				
				SocketSend.bExecute := TRUE;
				state := E_State.STATE_4_Send;
			END_IF
		END_IF
		
	E_State.STATE_4_Send:
		SocketSend.bExecute := FALSE;
		IF NOT SocketSend.bBusy AND NOT SocketSend.bError THEN
			SocketReceive.bExecute := TRUE;
			state := E_State.STATE_3_Receive;
		END_IF
END_CASE

	
	
]]></ST>
    </Implementation>
    <LineIds Name="FB_TCPServer">
      <LineId Id="3724" Count="5" />
      <LineId Id="3734" Count="99" />
      <LineId Id="431" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>